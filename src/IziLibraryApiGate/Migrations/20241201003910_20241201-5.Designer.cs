// <auto-generated />
using System;
using IziLibrary.Database.DataBase.EfCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IziLibraryApiGate.Migrations
{
    [DbContext(typeof(IziProjectsDbContext))]
    [Migration("20241201003910_20241201-5")]
    partial class _202412015
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeviceIziProject", b =>
                {
                    b.Property<Guid>("DevicesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("IziProjectsId")
                        .HasColumnType("uuid");

                    b.HasKey("DevicesId", "IziProjectsId");

                    b.HasIndex("IziProjectsId");

                    b.ToTable("DeviceIziProject");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.EntityAsmdef", b =>
                {
                    b.Property<Guid>("EntityAsmdefId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("MetaId")
                        .HasColumnType("uuid");

                    b.HasKey("EntityAsmdefId");

                    b.HasIndex("MetaId")
                        .IsUnique();

                    b.ToTable("Asmdefs");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.EntityAsmdefAtDevice", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("AsmdefId")
                        .HasColumnType("uuid");

                    b.Property<string>("PathAbs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeviceId", "AsmdefId");

                    b.HasIndex("AsmdefId");

                    b.ToTable("AsmdefsAtDevice");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.EntityMeta", b =>
                {
                    b.Property<Guid>("MetaId")
                        .HasColumnType("uuid");

                    b.HasKey("MetaId");

                    b.ToTable("Metas");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.EntityMetaAtDevice", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MetaId")
                        .HasColumnType("uuid");

                    b.HasKey("DeviceId", "MetaId");

                    b.HasIndex("MetaId");

                    b.ToTable("MetasAtDevice");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.RelationAsmdef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("CheckDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("FromId")
                        .HasColumnType("uuid");

                    b.Property<int>("RelationType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ToId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ToId");

                    b.HasIndex("FromId", "ToId")
                        .IsUnique()
                        .HasFilter("\"FromId\" IS NOT NULL AND \"ToId\" IS NOT NULL");

                    b.ToTable("RelationAsmdefs");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.RelationAsmdefAtDevice", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<int>("RelationId")
                        .HasColumnType("integer");

                    b.HasKey("DeviceId", "RelationId");

                    b.HasIndex("RelationId");

                    b.ToTable("RelationAsmdefsAtDevice");
                });

            modelBuilder.Entity("IziHardGames.CrossTables.AsmdefXCsproj", b =>
                {
                    b.Property<Guid>("AsmdefId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CsprojId")
                        .HasColumnType("uuid");

                    b.HasKey("AsmdefId", "CsprojId");

                    b.HasIndex("CsprojId");

                    b.ToTable("AsmdefXCsproj");
                });

            modelBuilder.Entity("IziHardGames.DotNetProjects.CsprojRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset?>("CheckDateTime")
                        .HasColumnType("timestamptz");

                    b.Property<Guid?>("ChildId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<int>("RelationType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.HasIndex("ParentId", "ChildId")
                        .IsUnique()
                        .HasFilter("\"ParentId\" IS NOT NULL AND \"ChildId\" IS NOT NULL");

                    b.ToTable("Relations");
                });

            modelBuilder.Entity("IziHardGames.DotNetProjects.CsprojRelationAtDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Include")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RelationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("Include");

                    b.HasIndex("RelationId", "DeviceId")
                        .IsUnique();

                    b.ToTable("RelationsAtDevice");
                });

            modelBuilder.Entity("IziHardGames.DotNetProjects.EntityCsproj", b =>
                {
                    b.Property<Guid>("EntityCsprojId")
                        .HasColumnType("uuid");

                    b.Property<int>("CountReferencesToProjects")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("RepoGitHub")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("EntityCsprojId");

                    b.ToTable("Csprojs");
                });

            modelBuilder.Entity("IziLibrary.Database.DataBase.EfCore.CsProjectAtDevice", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityCsprojId")
                        .HasColumnType("uuid");

                    b.Property<string>("PathAbs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeviceId", "EntityCsprojId");

                    b.HasIndex("EntityCsprojId");

                    b.HasIndex("PathAbs")
                        .IsUnique();

                    b.ToTable("ProjectsAtDevice");
                });

            modelBuilder.Entity("IziLibrary.Database.DataBase.EfCore.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DeviceSettingsId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("IziLibrary.Database.DataBase.EfCore.DeviceSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string[]>("SourceDirs")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("DeviceSettings");
                });

            modelBuilder.Entity("IziLibrary.Database.DataBase.EfCore.IziProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DeviceIziProject", b =>
                {
                    b.HasOne("IziLibrary.Database.DataBase.EfCore.Device", null)
                        .WithMany()
                        .HasForeignKey("DevicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IziLibrary.Database.DataBase.EfCore.IziProject", null)
                        .WithMany()
                        .HasForeignKey("IziProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.EntityAsmdef", b =>
                {
                    b.HasOne("IziHardGames.Asmdefs.EntityMeta", "Meta")
                        .WithOne("Asmdef")
                        .HasForeignKey("IziHardGames.Asmdefs.EntityAsmdef", "MetaId");

                    b.Navigation("Meta");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.EntityAsmdefAtDevice", b =>
                {
                    b.HasOne("IziHardGames.Asmdefs.EntityAsmdef", "Asmdef")
                        .WithMany("AsmdefsAtDevice")
                        .HasForeignKey("AsmdefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IziLibrary.Database.DataBase.EfCore.Device", "Device")
                        .WithMany("Asmdefs")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asmdef");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.EntityMetaAtDevice", b =>
                {
                    b.HasOne("IziHardGames.Asmdefs.EntityMeta", "Meta")
                        .WithMany()
                        .HasForeignKey("MetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meta");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.RelationAsmdef", b =>
                {
                    b.HasOne("IziHardGames.Asmdefs.EntityAsmdef", "From")
                        .WithMany("AsParent")
                        .HasForeignKey("FromId");

                    b.HasOne("IziHardGames.Asmdefs.EntityAsmdef", "To")
                        .WithMany("AsChild")
                        .HasForeignKey("ToId");

                    b.Navigation("From");

                    b.Navigation("To");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.RelationAsmdefAtDevice", b =>
                {
                    b.HasOne("IziLibrary.Database.DataBase.EfCore.Device", "Device")
                        .WithMany("RelationsAsmdef")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IziHardGames.Asmdefs.RelationAsmdef", "Relation")
                        .WithMany("RelationsAtDevice")
                        .HasForeignKey("RelationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("IziHardGames.CrossTables.AsmdefXCsproj", b =>
                {
                    b.HasOne("IziHardGames.Asmdefs.EntityAsmdef", "Asmdef")
                        .WithMany("AsmdefXCsprojs")
                        .HasForeignKey("AsmdefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IziHardGames.DotNetProjects.EntityCsproj", "Csproj")
                        .WithMany("AsmdefXCsprojs")
                        .HasForeignKey("CsprojId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asmdef");

                    b.Navigation("Csproj");
                });

            modelBuilder.Entity("IziHardGames.DotNetProjects.CsprojRelation", b =>
                {
                    b.HasOne("IziHardGames.DotNetProjects.EntityCsproj", "Child")
                        .WithMany("AsParent")
                        .HasForeignKey("ChildId");

                    b.HasOne("IziHardGames.DotNetProjects.EntityCsproj", "Parent")
                        .WithMany("AsChild")
                        .HasForeignKey("ParentId");

                    b.Navigation("Child");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("IziHardGames.DotNetProjects.CsprojRelationAtDevice", b =>
                {
                    b.HasOne("IziLibrary.Database.DataBase.EfCore.Device", "Device")
                        .WithMany("Relations")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IziHardGames.DotNetProjects.CsprojRelation", "Relation")
                        .WithMany("RelationsAtDevice")
                        .HasForeignKey("RelationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("IziLibrary.Database.DataBase.EfCore.CsProjectAtDevice", b =>
                {
                    b.HasOne("IziLibrary.Database.DataBase.EfCore.Device", "Device")
                        .WithMany("Csprojects")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IziHardGames.DotNetProjects.EntityCsproj", "EntityCsproj")
                        .WithMany("CsProjectAtDevices")
                        .HasForeignKey("EntityCsprojId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("EntityCsproj");
                });

            modelBuilder.Entity("IziLibrary.Database.DataBase.EfCore.Device", b =>
                {
                    b.HasOne("IziLibrary.Database.DataBase.EfCore.DeviceSettings", "Settings")
                        .WithOne("Device")
                        .HasForeignKey("IziLibrary.Database.DataBase.EfCore.Device", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.EntityAsmdef", b =>
                {
                    b.Navigation("AsChild");

                    b.Navigation("AsParent");

                    b.Navigation("AsmdefXCsprojs");

                    b.Navigation("AsmdefsAtDevice");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.EntityMeta", b =>
                {
                    b.Navigation("Asmdef");
                });

            modelBuilder.Entity("IziHardGames.Asmdefs.RelationAsmdef", b =>
                {
                    b.Navigation("RelationsAtDevice");
                });

            modelBuilder.Entity("IziHardGames.DotNetProjects.CsprojRelation", b =>
                {
                    b.Navigation("RelationsAtDevice");
                });

            modelBuilder.Entity("IziHardGames.DotNetProjects.EntityCsproj", b =>
                {
                    b.Navigation("AsChild");

                    b.Navigation("AsParent");

                    b.Navigation("AsmdefXCsprojs");

                    b.Navigation("CsProjectAtDevices");
                });

            modelBuilder.Entity("IziLibrary.Database.DataBase.EfCore.Device", b =>
                {
                    b.Navigation("Asmdefs");

                    b.Navigation("Csprojects");

                    b.Navigation("Relations");

                    b.Navigation("RelationsAsmdef");
                });

            modelBuilder.Entity("IziLibrary.Database.DataBase.EfCore.DeviceSettings", b =>
                {
                    b.Navigation("Device")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
